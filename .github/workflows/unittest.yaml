name: Unit Tests

on:
  pull_request_target:
  push:
    branches:
      - 'main'
      - 'dev'
      - '*-release'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: ['3.9', '3.10', '3.11']
        python-version: [ '3.11' ]

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          npm install -g @mermaid-js/mermaid-cli
          uvx -p ${{ matrix.python-version }} --with-editable .[test,rag] playwright install --with-deps
      - name: Test with pytest
        run: |
          export ALLOW_OPENAI_API_CALL=0
          mkdir -p ~/.metagpt && cp tests/config2.yaml ~/.metagpt/config2.yaml
          uvx -p ${{ matrix.python-version }} --with-editable .[test,rag] pytest | tee unittest.txt
      - name: Show coverage report
        run: |
          uvx -p ${{ matrix.python-version }} --with-editable .[test,rag] coverage report -m
      - name: Show failed tests and overall summary
        run: |
          grep -E "FAILED tests|ERROR tests|[0-9]+ passed," unittest.txt
          failed_count=$(grep -E "FAILED tests|ERROR tests" unittest.txt | wc -l | tr -d '[:space:]')
          if [[ $failed_count -gt 0 ]]; then
            echo "$failed_count failed lines found! Task failed."
            exit 1
          fi
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: |
            ./unittest.txt
            ./htmlcov/
            ./tests/data/rsp_cache_new.json
          retention-days: 3
        if: ${{ always() }}
