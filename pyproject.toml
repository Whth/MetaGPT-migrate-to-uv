[project]
name = "metagpt"
version = "0.8.2"
description = "The Multi-Agent Framework"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Alexander Wu", email = "alexanderwu@deepwisdom.ai" },
    { name = "Whth Yotta", email = "porgandia@outlook.com" }
]
keywords = ["metagpt", "multi-agent", "multi-role", "programming", "gpt", "llm", "metaprogramming"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
scripts = { metagpt = "metagpt.software_company:app" }
urls = { Homepage = "https://github.com/geekan/MetaGPT" }
requires-python = ">=3.10,<3.12"
dependencies = [
    "aiohttp==3.8.6",
    "channels==4.0.0",
    "fire==0.4.0",
    "typer==0.9.0",
    "lancedb==0.4.0",
    "loguru==0.6.0",
    "meilisearch==0.21.0",
    "numpy~=1.26.4",
    "openai~=1.39.0",
    "openpyxl~=3.1.5",
    "beautifulsoup4==4.12.3",
    "pandas==2.1.1",
    "pydantic>=2.5.3",
    "python_docx==0.8.11",
    "PyYAML==6.0.1",
    "setuptools==65.6.3",
    "tenacity==8.2.3",
    "tiktoken==0.7.0",
    "tqdm==4.66.2",
    "anthropic==0.18.1",
    "typing-inspect==0.8.0",
    "libcst==1.0.1",
    "qdrant-client==1.7.0",
    "grpcio~=1.67.0",
    "grpcio-tools~=1.62.3",
    "grpcio-status~=1.62.3",
    "ta==0.10.2",
    "semantic-kernel==0.4.3.dev0",
    "wrapt==1.15.0",
    "curl-cffi~=0.7.0",
    "httplib2~=0.22.0",
    "websocket-client~=1.8.0",
    "aiofiles==23.2.1",
    "gitpython==3.1.40",
    "zhipuai~=2.1.5",
    "rich==13.6.0",
    "nbclient==0.9.0",
    "nbformat==5.9.2",
    "ipython==8.17.2",
    "ipykernel==6.27.1",
    "scikit_learn==1.3.2",
    "typing-extensions==4.9.0",
    "socksio~=1.0.0",
    "gitignore-parser==0.1.9",
    "websockets>=10.0,<12.0",
    "networkx~=3.2.1",
    "google-generativeai==0.4.1",
    "playwright>=1.26",
    "anytree",
    "ipywidgets==8.1.1",
    "Pillow",
    "imap_tools==1.5.0",
    "qianfan~=0.4.4",
    "dashscope~=1.19.3",
    "rank-bm25==0.2.2",
    "jieba==0.42.1",
    "volcengine-python-sdk[ark]~=1.0.94",
    "gymnasium==0.29.1",
    "boto3~=1.34.69",
    "spark_ai_python~=0.3.30",
    "agentops",
    "tree_sitter~=0.23.2",
    "tree_sitter_python~=0.23.2",
    "httpx==0.27.2",
    "redis~=5.0.0"
]





[project.optional-dependencies]

selenium = [
    "selenium>4",
    "webdriver_manager",
    "beautifulsoup4"
]

search-google = [
    "google-api-python-client==2.94.0"
]

search-ddg = [
    "duckduckgo-search~=4.1.1"
]

rag = [
    "faiss_cpu==1.8.0",
    "llama-index-core==0.10.15",
    "llama-index-embeddings-azure-openai==0.1.6",
    "llama-index-embeddings-openai==0.1.5",
    "llama-index-embeddings-gemini==0.1.6",
    "llama-index-embeddings-ollama==0.1.2",
    "llama-index-llms-azure-openai==0.1.4",
    "llama-index-readers-file==0.1.4",
    "llama-index-retrievers-bm25==0.1.3",
    "llama-index-vector-stores-faiss==0.1.1",
    "llama-index-vector-stores-elasticsearch==0.1.6",
    "llama-index-vector-stores-chroma==0.1.6",
    "llama-index-postprocessor-cohere-rerank==0.1.4",
    "llama-index-postprocessor-colbert-rerank==0.1.1",
    "llama-index-postprocessor-flag-embedding-reranker==0.1.2",
    "docx2txt==0.8"
]

test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-html",
    "pytest-xdist",
    "pytest-timeout",
    "connexion[uvicorn]~=3.0.5",
    "azure-cognitiveservices-speech~=1.31.0",
    "aioboto3~=12.4.0",
    "gradio==3.0.0",
    "google-api-core~=2.17.1",
    "protobuf",
    "pylint==3.0.3",
    "pybrowsers"
]

pyppeteer = [
    "pyppeteer>=1.0.2"
]

dev = [
    "pylint~=3.0.3",
    "black~=23.3.0",
    "isort~=5.12.0",
    "pre-commit~=3.6.0"
]

android_assistant = [
    "pyshine",
    "opencv-python",
    "protobuf",
    "modelscope",
    "tensorflow",
    "tensorflow-macos; os_name == 'darwin'",
    "keras",
    "torch",
    "torchvision",
    "transformers",
    "opencv-python",
    "matplotlib",
    "pycocotools",
    "SentencePiece",
    "tf_slim",
    "tf_keras",
    "pyclipper",
    "shapely",
    "groundingdino-py",
    "datasets",
    "clip-openai"
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
prerelease = "allow"





